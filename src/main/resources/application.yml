server:
  port: 8090
spring:
  application:
    name: codex-feasibility-gui-backend
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.url}/auth/realms/Num/protocol/openid-connect/certs
      client:
        registration:
          userStoreClient:
            authorization-grant-type: client_credentials
            client-id: codexFeasibilityGuiBackend
            client-secret: bc1843c0-3c57-4c2c-9b40-ac38e6dd545e
        provider:
          userStoreClient:
            token-uri: ${keycloak.url}/auth/realms/Num/protocol/openid-connect/token
  datasource:
    url: jdbc:postgresql://localhost:5555/codex_ui?currentSchema=codex
    username: postgres
    password: password
    driverClassName: org.postgresql.Driver

  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect=com:
          jackis:
            jsonintegration:
              hibernate: CustomPostgreSQL95Dialect


app:
  # AKTIN or DSF or MOCK
  broker-client: MOCK

backend:
  ontology-folder: ontology/ui_profiles

swagger:
  oauth2:
    token-uri: ${keycloak.url}/auth/realms/Num/protocol/openid-connect/token
    auth-uri: ${keycloak.url}/auth/realms/Num/protocol/openid-connect/auth
    client-name: codexFeasibilityGuiBackendWebapp
    client-secret: codexFeasibilityGuiBackendWebapp

userstore:
  url: ${keycloak.url}/auth/admin/realms/Num

keycloak:
  url: http://localhost:8080

logging:
  level:
    de.numcodex: trace
    org.springframework.web: trace

cors:
  allowedOrigins:
    - "*"

de:
  num-codex:
    FeasibilityGuiBackend:
      aktin:
        broker:
          baseUrl: 'AKTIN_BROKER_BASE_URL'
          apiKey: 'AKTIN_BROKER_API_KEY'
      dsf:
        security:
          certificate: ${DSF_SECURITY_CACERT}
          keystore:
            p12file: ${DSF_SECURITY_KEYSTORE_P12FILE}
            password: ${DSF_SECURITY_KEYSTORE_PASSWORD}
        webservice:
          baseUrl: ${DSF_WEBSERVICE_BASE_URL}
          readTimeout: 20000
          connectTimeout: 2000
        websocket:
          url: ${DSF_WEBSOCKET_URL}
        organizationId: ${DSF_ORGANIZATION_ID}

